{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 16, false],
        ["tmp_0", 32, false],
        ["tmp_1", 8, false],
        ["tmp_2", 16, false],
        ["tmp_3", 32, false],
        ["tmp_4", 16, false],
        ["tmp_5", 32, false],
        ["tmp_6", 8, false],
        ["tmp_7", 16, false],
        ["tmp_8", 32, false],
        ["tmp_9", 16, false],
        ["tmp_10", 32, false],
        ["tmp_11", 8, false],
        ["tmp_12", 16, false],
        ["tmp_13", 32, false],
        ["userMetadata.service_id", 16, false],
        ["userMetadata.inc_flowid", 16, false],
        ["userMetadata.flows_index1", 32, false],
        ["userMetadata.flows_index2", 32, false],
        ["userMetadata.flows_index3", 32, false],
        ["userMetadata.value1", 16, false],
        ["userMetadata.value2", 16, false],
        ["userMetadata.value3", 16, false],
        ["userMetadata.flow_count", 16, false],
        ["userMetadata.udp_length", 16, false],
        ["userMetadata.max", 16, false],
        ["userMetadata.counted", 8, false],
        ["userMetadata.code", 16, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 4,
      "fields" : [
        ["sport", 16, false],
        ["dport", 16, false],
        ["len", 16, false],
        ["checksum", 16, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 5,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 3, false],
        ["ecn", 3, false],
        ["ctrl", 6, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    },
    {
      "name" : "packet_out_header_t",
      "id" : 6,
      "fields" : [
        ["egress_port", 16, false]
      ]
    },
    {
      "name" : "packet_in_header_t",
      "id" : 7,
      "fields" : [
        ["ingress_port", 16, false],
        ["code", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 4,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 5,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_out",
      "id" : 6,
      "header_type" : "packet_out_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_in",
      "id" : 7,
      "header_type" : "packet_in_header_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "field_list0",
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata.code"]
        }
      ]
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00ff",
              "mask" : null,
              "next_state" : "parse_packet_out"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ]
        },
        {
          "name" : "parse_packet_out",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "packet_out"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ethernet",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata.udp_length"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "totalLen"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffec"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 404,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["packet_in", "ethernet", "ipv4", "udp", "tcp"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.flows_register1",
      "id" : 0,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 154,
        "column" : 26,
        "source_fragment" : "flows_register1"
      },
      "size" : 64,
      "bitwidth" : 16
    },
    {
      "name" : "MyIngress.count_register",
      "id" : 1,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 155,
        "column" : 25,
        "source_fragment" : "count_register"
      },
      "size" : 1,
      "bitwidth" : 16
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_0"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_3"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_4"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_5"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_6"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_7"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_8"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "xor16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_9"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_10"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_11"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_12"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_13"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 371,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    },
    {
      "name" : "calc_3",
      "id" : 4,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 387,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata.udp_length"]
        },
        {
          "type" : "field",
          "value" : ["udp", "sport"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dport"]
        },
        {
          "type" : "field",
          "value" : ["udp", "len"]
        },
        {
          "type" : "payload",
          "value" : null
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 158,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 158,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 158,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.l2_forward",
      "id" : 8,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 162,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 163,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 164,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.update_flow",
      "id" : 9,
      "runtime_data" : [
        {
          "name" : "max",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dport"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 169,
            "column" : 66,
            "source_fragment" : "hdr.udp.dport"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 169,
            "column" : 81,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 169,
            "column" : 99,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["udp", "sport"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 169,
            "column" : 118,
            "source_fragment" : "hdr.udp.sport"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 169,
            "column" : 133,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x0040"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 169,
            "column" : 8,
            "source_fragment" : "hash(meta.flows_index1, HashAlgorithm.crc16, (bit<16>)0, {hdr.udp.dport, hdr.ipv4.dstAddr, hdr.ipv4.protocol, hdr.udp.sport, hdr.ipv4.srcAddr}, (bit<16>) 64)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dport"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 170,
            "column" : 67,
            "source_fragment" : "hdr.udp.dport"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 170,
            "column" : 82,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 170,
            "column" : 100,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "field",
              "value" : ["udp", "sport"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 170,
            "column" : 119,
            "source_fragment" : "hdr.udp.sport"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 170,
            "column" : 134,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index2"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x0040"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 170,
            "column" : 8,
            "source_fragment" : "hash(meta.flows_index2, HashAlgorithm.csum16, (bit<16>)0, {hdr.udp.dport, hdr.ipv4.dstAddr, hdr.ipv4.protocol, hdr.udp.sport, hdr.ipv4.srcAddr}, (bit<16>) 64)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dport"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 171,
            "column" : 66,
            "source_fragment" : "hdr.udp.dport"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 171,
            "column" : 81,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 171,
            "column" : 99,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "field",
              "value" : ["udp", "sport"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 171,
            "column" : 118,
            "source_fragment" : "hdr.udp.sport"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 171,
            "column" : 133,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index3"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x0040"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 171,
            "column" : 8,
            "source_fragment" : "hash(meta.flows_index3, HashAlgorithm.xor16, (bit<16>)0, {hdr.udp.dport, hdr.ipv4.dstAddr, hdr.ipv4.protocol, hdr.udp.sport, hdr.ipv4.srcAddr}, (bit<16>) 64)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value1"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.flows_register1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index1"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 173,
            "column" : 8,
            "source_fragment" : "flows_register1.read(meta.value1, (bit<32>)meta.flows_index1)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value2"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.flows_register1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index2"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 174,
            "column" : 8,
            "source_fragment" : "flows_register1.read(meta.value2, (bit<32>)meta.flows_index2)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value3"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.flows_register1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index3"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 175,
            "column" : 8,
            "source_fragment" : "flows_register1.read(meta.value3, (bit<32>)meta.flows_index3)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value1"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "meta.value1 = meta.value1 + 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value2"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 178,
            "column" : 8,
            "source_fragment" : "meta.value2 = meta.value2 + 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 179,
            "column" : 8,
            "source_fragment" : "meta.value3 = meta.value3 + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.flows_register1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index1"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value1"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 181,
            "column" : 8,
            "source_fragment" : "flows_register1.write(meta.flows_index1, meta.value1)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.flows_register1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index2"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value2"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 182,
            "column" : 8,
            "source_fragment" : "flows_register1.write(meta.flows_index2, meta.value2)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.flows_register1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flows_index3"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value3"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 183,
            "column" : 8,
            "source_fragment" : "flows_register1.write(meta.flows_index3, meta.value3)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.max"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 185,
            "column" : 8,
            "source_fragment" : "meta.max = max"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.counted"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 186,
            "column" : 8,
            "source_fragment" : "meta.counted = (bit<8>)0"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.clone_packet",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x000001f4"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 192,
            "column" : 8,
            "source_fragment" : "clone_preserving_field_list(CloneType.I2E, CPU_CLONE_SESSION_ID, 0)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.clone_packet",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x000001f4"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 192,
            "column" : 8,
            "source_fragment" : "clone_preserving_field_list(CloneType.I2E, CPU_CLONE_SESSION_ID, 0)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.clone_packet",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x000001f4"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 192,
            "column" : 8,
            "source_fragment" : "clone_preserving_field_list(CloneType.I2E, CPU_CLONE_SESSION_ID, 0)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ipv4_forward_api",
      "id" : 13,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 196,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 197,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 198,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 199,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ipv4_forward",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 203,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ipv4_nat_forward",
      "id" : 15,
      "runtime_data" : [
        {
          "name" : "dstipaddr",
          "bitwidth" : 32
        },
        {
          "name" : "dport",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 207,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 208,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.dstAddr = dstipaddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["udp", "dport"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 209,
            "column" : 8,
            "source_fragment" : "hdr.udp.dport = dport"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ipv4_nat_answer_forward",
      "id" : 16,
      "runtime_data" : [
        {
          "name" : "originaldestIpAddr",
          "bitwidth" : 32
        },
        {
          "name" : "sport",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 213,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 214,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.srcAddr = originaldestIpAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["udp", "sport"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 215,
            "column" : 8,
            "source_fragment" : "hdr.udp.sport = sport"
          }
        }
      ]
    },
    {
      "name" : "basic291",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["packet_out", "egress_port"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01ff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 291,
            "column" : 12,
            "source_fragment" : "standard_metadata.egress_spec = (bit<9>)hdr.packet_out.egress_port"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_out"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 292,
            "column" : 12,
            "source_fragment" : "hdr.packet_out.setInvalid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_in"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 293,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "ingress_port"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 294,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.ingress_port = (bit<16>)standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "code"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 295,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.code = 16w0"
          }
        }
      ]
    },
    {
      "name" : "basic308",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.code"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0258"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 308,
            "column" : 28,
            "source_fragment" : "meta.code = (bit<16>) 600"
          }
        }
      ]
    },
    {
      "name" : "basic303",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.count_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 303,
            "column" : 24,
            "source_fragment" : "count_register.read(meta.flow_count, (bit<32>)0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.flow_count"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 304,
            "column" : 24,
            "source_fragment" : "meta.flow_count = meta.flow_count + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.count_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 305,
            "column" : 24,
            "source_fragment" : "count_register.write((bit<32>)0, meta.flow_count)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.counted"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 306,
            "column" : 24,
            "source_fragment" : "meta.counted = (bit<8>)1"
          }
        }
      ]
    },
    {
      "name" : "basic320",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.code"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0258"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 320,
            "column" : 28,
            "source_fragment" : "meta.code = (bit<16>) 600"
          }
        }
      ]
    },
    {
      "name" : "basic315",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.count_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 315,
            "column" : 24,
            "source_fragment" : "count_register.read(meta.flow_count, (bit<32>)0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.flow_count"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 316,
            "column" : 24,
            "source_fragment" : "meta.flow_count = meta.flow_count + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.count_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 317,
            "column" : 24,
            "source_fragment" : "count_register.write((bit<32>)0, meta.flow_count)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.counted"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 318,
            "column" : 24,
            "source_fragment" : "meta.counted = (bit<8>)1"
          }
        }
      ]
    },
    {
      "name" : "basic332",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.code"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0258"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 332,
            "column" : 28,
            "source_fragment" : "meta.code = (bit<16>) 600"
          }
        }
      ]
    },
    {
      "name" : "basic327",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.count_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 327,
            "column" : 24,
            "source_fragment" : "count_register.read(meta.flow_count, (bit<32>)0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.flow_count"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 328,
            "column" : 24,
            "source_fragment" : "meta.flow_count = meta.flow_count + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.count_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.flow_count"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 329,
            "column" : 24,
            "source_fragment" : "count_register.write((bit<32>)0, meta.flow_count)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.counted"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 330,
            "column" : 24,
            "source_fragment" : "meta.counted = (bit<8>)1"
          }
        }
      ]
    },
    {
      "name" : "basic360",
      "id" : 24,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_in"
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 360,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "ingress_port"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 361,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.ingress_port = (bit<16>)standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "code"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.code"]
            }
          ],
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 362,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.code = meta.code"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 150,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_basic291",
          "id" : 0,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 291,
            "column" : 42,
            "source_fragment" : "= (bit<9>)hdr.packet_out.egress_port; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["basic291"],
          "base_default_next" : null,
          "next_tables" : {
            "basic291" : null
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.flow_detection",
          "id" : 1,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 259,
            "column" : 10,
            "source_fragment" : "flow_detection"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.udp.dport",
              "target" : ["udp", "dport"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.protocol",
              "target" : ["ipv4", "protocol"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9, 3],
          "actions" : ["MyIngress.update_flow", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "node_6",
            "__MISS__" : "MyIngress.ipv4_api"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_basic303",
          "id" : 2,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 303,
            "column" : 24,
            "source_fragment" : "count_register.read(meta.flow_count, (bit<32>)0); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19],
          "actions" : ["basic303"],
          "base_default_next" : "node_9",
          "next_tables" : {
            "basic303" : "node_9"
          },
          "default_entry" : {
            "action_id" : 19,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_basic308",
          "id" : 3,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 308,
            "column" : 38,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["basic308"],
          "base_default_next" : "tbl_clone_packet",
          "next_tables" : {
            "basic308" : "tbl_clone_packet"
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_clone_packet",
          "id" : 4,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 309,
            "column" : 28,
            "source_fragment" : "clone_packet()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["MyIngress.clone_packet"],
          "base_default_next" : "MyIngress.ipv4_api",
          "next_tables" : {
            "MyIngress.clone_packet" : "MyIngress.ipv4_api"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_basic315",
          "id" : 5,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 315,
            "column" : 24,
            "source_fragment" : "count_register.read(meta.flow_count, (bit<32>)0); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["basic315"],
          "base_default_next" : "node_15",
          "next_tables" : {
            "basic315" : "node_15"
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_basic320",
          "id" : 6,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 320,
            "column" : 38,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["basic320"],
          "base_default_next" : "tbl_clone_packet_0",
          "next_tables" : {
            "basic320" : "tbl_clone_packet_0"
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_clone_packet_0",
          "id" : 7,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 321,
            "column" : 28,
            "source_fragment" : "clone_packet()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["MyIngress.clone_packet"],
          "base_default_next" : "MyIngress.ipv4_api",
          "next_tables" : {
            "MyIngress.clone_packet" : "MyIngress.ipv4_api"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_basic327",
          "id" : 8,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 327,
            "column" : 24,
            "source_fragment" : "count_register.read(meta.flow_count, (bit<32>)0); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [23],
          "actions" : ["basic327"],
          "base_default_next" : "node_21",
          "next_tables" : {
            "basic327" : "node_21"
          },
          "default_entry" : {
            "action_id" : 23,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_basic332",
          "id" : 9,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 332,
            "column" : 38,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["basic332"],
          "base_default_next" : "tbl_clone_packet_1",
          "next_tables" : {
            "basic332" : "tbl_clone_packet_1"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_clone_packet_1",
          "id" : 10,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 333,
            "column" : 28,
            "source_fragment" : "clone_packet()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["MyIngress.clone_packet"],
          "base_default_next" : "MyIngress.ipv4_api",
          "next_tables" : {
            "MyIngress.clone_packet" : "MyIngress.ipv4_api"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.ipv4_api",
          "id" : 11,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 246,
            "column" : 10,
            "source_fragment" : "ipv4_api"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.srcAddr",
              "target" : ["ipv4", "srcAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13, 7, 2],
          "actions" : ["MyIngress.ipv4_forward_api", "MyIngress.drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : null,
            "__MISS__" : "MyIngress.ipv4_nat_answer"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.ipv4_nat_answer",
          "id" : 12,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 218,
            "column" : 10,
            "source_fragment" : "ipv4_nat_answer"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.srcAddr",
              "target" : ["ipv4", "srcAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16, 5, 0],
          "actions" : ["MyIngress.ipv4_nat_answer_forward", "MyIngress.drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : "MyIngress.ipv4_lpm",
            "__HIT__" : "MyIngress.l2_forwarding"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.ipv4_lpm",
          "id" : 13,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 232,
            "column" : 10,
            "source_fragment" : "ipv4_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14, 15, 6, 1],
          "actions" : ["MyIngress.ipv4_forward", "MyIngress.ipv4_nat_forward", "MyIngress.drop", "NoAction"],
          "base_default_next" : "MyIngress.l2_forwarding",
          "next_tables" : {
            "MyIngress.ipv4_forward" : "MyIngress.l2_forwarding",
            "MyIngress.ipv4_nat_forward" : "MyIngress.l2_forwarding",
            "MyIngress.drop" : "MyIngress.l2_forwarding",
            "NoAction" : "MyIngress.l2_forwarding"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.l2_forwarding",
          "id" : 14,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 273,
            "column" : 10,
            "source_fragment" : "l2_forwarding"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8, 4],
          "actions" : ["MyIngress.l2_forward", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.l2_forward" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 286,
            "column" : 12,
            "source_fragment" : "standard_metadata.ingress_port == CPU_PORT"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00ff"
              }
            }
          },
          "true_next" : "tbl_basic291",
          "false_next" : "node_4"
        },
        {
          "name" : "node_4",
          "id" : 1,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 298,
            "column" : 17,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.flow_detection"
        },
        {
          "name" : "node_6",
          "id" : 2,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 301,
            "column" : 20,
            "source_fragment" : "meta.value1 == (bit<16>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.value1"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0001"
              }
            }
          },
          "true_next" : "node_7",
          "false_next" : "node_12"
        },
        {
          "name" : "node_7",
          "id" : 3,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 302,
            "column" : 24,
            "source_fragment" : "meta.counted != (bit<8>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.counted"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_basic303",
          "false_next" : "MyIngress.ipv4_api"
        },
        {
          "name" : "node_9",
          "id" : 4,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 307,
            "column" : 28,
            "source_fragment" : "meta.flow_count >= meta.max"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.flow_count"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.max"]
              }
            }
          },
          "true_next" : "tbl_basic308",
          "false_next" : "MyIngress.ipv4_api"
        },
        {
          "name" : "node_12",
          "id" : 5,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 313,
            "column" : 25,
            "source_fragment" : "meta.value2 == (bit<16>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.value2"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0001"
              }
            }
          },
          "true_next" : "node_13",
          "false_next" : "node_18"
        },
        {
          "name" : "node_13",
          "id" : 6,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 314,
            "column" : 24,
            "source_fragment" : "meta.counted != (bit<8>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.counted"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_basic315",
          "false_next" : "MyIngress.ipv4_api"
        },
        {
          "name" : "node_15",
          "id" : 7,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 319,
            "column" : 28,
            "source_fragment" : "meta.flow_count >= meta.max"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.flow_count"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.max"]
              }
            }
          },
          "true_next" : "tbl_basic320",
          "false_next" : "MyIngress.ipv4_api"
        },
        {
          "name" : "node_18",
          "id" : 8,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 325,
            "column" : 25,
            "source_fragment" : "meta.value3 == (bit<16>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.value3"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0001"
              }
            }
          },
          "true_next" : "node_19",
          "false_next" : "MyIngress.ipv4_api"
        },
        {
          "name" : "node_19",
          "id" : 9,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 326,
            "column" : 24,
            "source_fragment" : "meta.counted != (bit<8>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.counted"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_basic327",
          "false_next" : "MyIngress.ipv4_api"
        },
        {
          "name" : "node_21",
          "id" : 10,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 331,
            "column" : 28,
            "source_fragment" : "meta.flow_count >= meta.max"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.flow_count"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.max"]
              }
            }
          },
          "true_next" : "tbl_basic332",
          "false_next" : "MyIngress.ipv4_api"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 352,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_30",
      "tables" : [
        {
          "name" : "tbl_basic360",
          "id" : 15,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 360,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [24],
          "actions" : ["basic360"],
          "base_default_next" : null,
          "next_tables" : {
            "basic360" : null
          },
          "default_entry" : {
            "action_id" : 24,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_30",
          "id" : 11,
          "source_info" : {
            "filename" : "basic.p4",
            "line" : 358,
            "column" : 11,
            "source_fragment" : "standard_metadata.instance_type != 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000000"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_basic360"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 371,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_2",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    },
    {
      "name" : "cksum_0",
      "id" : 1,
      "source_info" : {
        "filename" : "basic.p4",
        "line" : 387,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "target" : ["udp", "checksum"],
      "type" : "generic",
      "calculation" : "calc_3",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "or",
          "left" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ipv4", "dstAddr"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0a00020f"
              }
            }
          },
          "right" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ipv4", "srcAddr"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0a1e001e"
              }
            }
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "./basic.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}